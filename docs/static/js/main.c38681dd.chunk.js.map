{"version":3,"sources":["components/calendar/Calendar.js","components/form/Form.js","components/app/App.js","index.js"],"names":["Calendar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","days","daysString","localStorage","getItem","daysArray","JSON","parse","setState","react_default","a","createElement","className","map","day","i","key","title","message","concat","mood","Component","Form","setDate","event","date","target","value","setMood","setMessage","saveData","currentDay","push","setItem","stringify","htmlFor","id","type","onChange","name","placeholder","onClick","togglePopup","App","showForm","components_form_Form","components_calendar_Calendar","ReactDOM","render","components_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.c38681dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Calendar.css'\n\nclass Calendar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: []\n    }\n  }\n\n  // Trae days del Local Storage, lo convierte en un array y lo guarda en el state\n  componentDidMount () {\n    let daysString = localStorage.getItem('days');\n    let daysArray = JSON.parse(daysString);\n    this.setState({\n      days: daysArray\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"smiley-wrapper\">\n        {/* Pinta un div por cada elemento del array */}\n        {this.state.days.map((day, i) => {\n          return (\n            <div\n              key={i} \n              title={day.message}\n              className={`smiley ${\n                day.mood === ':)' \n                ? 'good'\n                : 'bad'\n              }`}\n            >\n              {day.mood}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\nexport default Calendar;","import React, { Component } from 'react';\nimport './Form.css';\n\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: '',\n      mood: '',\n      message: ''\n    }\n  }\n\n  setDate = (event) => {\n    this.setState({\n      date: event.target.value,\n    })\n  }\n  \n  setMood = (event) => {\n    this.setState({\n      mood: event.target.value\n    })\n  }\n\n  setMessage = (event) => {\n    this.setState({\n      message: event.target.value\n    })\n  }\n\n  saveData = () => {\n    let daysString = localStorage.getItem('days'); // Trae \"days\" del LocalStorage\n    let daysArray = JSON.parse(daysString); // Lo convierte en un array\n    let currentDay = {\n      date: this.state.date,\n      mood: this.state.mood,\n      message: this.state.message\n    };\n    daysArray.push(currentDay); // Mete \"currentDay\" en el array \"days\"\n    localStorage.setItem('days', JSON.stringify(daysArray)); // Vuelve a guardar \"days\" en el LocalStorage\n  }\n\n  render() {\n    return (\n      <div className=\"form-wrapper\">\n        <form>\n          <label \n            htmlFor=\"date\" \n            className=\"date-label\"\n          >\n            Fecha\n          </label>\n          <input \n            id=\"date\" \n            type=\"date\" \n            onChange={this.setDate} \n            className=\"date-input\"\n          />\n          \n          <label className=\"state-label\">Estado</label>\n          \n          <fieldset className=\"mood-input-wrapper\">\n            <input \n              id=\"state1\" \n              type=\"radio\" \n              name=\"state\" \n              value=\":)\" \n              onChange={this.setMood} \n              className=\"mood-input\"\n            />\n            <label \n              htmlFor=\"state1\" \n              className=\"mood-label\"\n            >\n              :)\n            </label>\n          </fieldset>\n          \n          <fieldset \n            className=\"mood-input-wrapper\"\n          >\n            <input \n              id=\"state2\" \n              type=\"radio\" \n              name=\"state\" \n              value=\":(\" \n              onChange={this.setMood} \n              className=\"mood-input\"\n            />\n            <label \n              htmlFor=\"state2\"\n              className=\"mood-label\"\n            >\n              :(\n            </label>\n          </fieldset>\n          \n           {/* Muestra el input del mensaje si \"mood\" es \":)\"  */}\n          {this.state.mood === ':)' && \n            <div className=\"message-wrapper\">\n              <label \n                htmlFor=\"message\"\n                className=\"message-label\"\n              >\n                Mensaje\n              </label>\n              <input \n                id=\"message\" \n                type=\"text\" \n                placeholder=\"¿Por qué es un buen día?\"\n                onChange={this.setMessage}\n                className=\"message-input\"\n              />\n            </div>\n          }\n\n          <input \n            type=\"submit\" \n            value=\"GUARDAR\" \n            onClick={this.saveData} \n            className=\"save-button\"\n          />\n        </form>\n\n        <button \n          onClick={this.props.togglePopup} \n          className=\"cancel-button\"\n        >\n          Cancelar\n        </button>\n      </div>\n    )\n  }\n}\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport Calendar from '../calendar/Calendar';\nimport Form from '../form/Form';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false,\n    }\n  }\n\n  // Crea el array days si no existe en el local storage\n  componentDidMount() {\n    if( !localStorage.getItem('days') ) {\n      localStorage.setItem('days', '[]');\n    }\n  }\n\n  // Cambia showForm entre true y false\n  togglePopup = () => {\n    if(this.state.showForm) {\n      this.setState({\n        showForm: false\n      })\n    } else {\n      this.setState({\n        showForm: true\n      })\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        {/* Muestra Form si this.state.showForm es true */}\n        {this.state.showForm === true && <Form togglePopup={this.togglePopup} />}\n        <button \n          onClick={ this.togglePopup } className=\"form-button\"\n        >\n          +\n        </button>\n        <Calendar/>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}